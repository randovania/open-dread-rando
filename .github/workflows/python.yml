name: Python Package

on:
  pull_request:
  merge_group:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Wheel

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
     
      - name: Install Python packages
        run: python -m pip install --upgrade pip setuptools build

      - name: build
        # Not adding PYTHONWARNINGS=error as it can trigger errors in pip itself
        # See https://github.com/pypa/pip/issues/12243
        run: python -m build
      
      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist

  test:
    needs:
      - build
      
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        python:
          - {version: '3.10'}
          - {version: '3.11'}
          - {version: '3.12'}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: install built wheel
        run: python -m pip install "$(ls dist/*.whl)[test]"
        shell: bash

      - name: test
        run: python -m pytest --cov src --cov-report=xml --skip-if-missing

      - name: codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  wheel_export:
    runs-on: self-hosted
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: Clean source
        run: rm -rf src

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Create venv
        run: python -m venv venv

      - name: Install Python packages
        run: venv/bin/python -m pip install --upgrade pip

      - name: install built wheel
        run: venv/bin/python -m pip install "$(ls dist/*.whl)[test]"
        shell: bash

      - name: test just exporting
        run:
          venv/bin/python -m pytest tests/test_full_patch.py


  full_test:
    runs-on: self-hosted
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Create venv
        run: python -m venv venv

      - name: Install Python packages
        run: venv/bin/python -m pip install --upgrade pip

      - name: install built wheel
        run: venv/bin/python -m pip install -e .[test]

      - name: Run Tests
        run:
          venv/bin/python -m pytest --cov src --cov-report=xml --durations=100

      - name: codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - test

    permissions:
      id-token: write
      contents: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish ðŸ“¦ to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.testpypi_password }}
          repository-url: https://test.pypi.org/legacy/

      - name: Create GitHub release
        uses: svenstaro/upload-release-action@2.10.0
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
